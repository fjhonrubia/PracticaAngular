//servicio para las bandasangular.module('jeviteca').service('BandasProvider',['$http','$q', function($http, $q){		//obtener todas las bandas	this.getBandas = function() {		return $http.get('data/bands.json');	};	//obtener banda por un id	this.getBandaId = function(idBanda) {		return $http.get('data/bands.json').then(				//si fue OK se recuperan los datos				function(datos) {					var deferred = $q.defer();					var banda;					for (var idx in datos.data) {						if (idBanda == datos.data[idx].id) {							banda = datos.data[idx];						}					}					deferred.resolve(banda);					return deferred.promise;				},				//si dio error se muestra un mensaje				function(err) {					alert('Ocurrió un error recuperando los datos');				}		)	};	//obtener las bandas favoritos del usuario	this.getFavsBandas = function() {		var deferred = $q.defer();		var bandasFavs;		if (typeof(Storage) !== 'undefined') {			bandasFavs = JSON.parse(localStorage.getItem('BandasFavs1'));			deferred.resolve(bandasFavs);			return deferred.promise;		} else {			deferred.reject("Error en la obtención de Bandas favoritas");			return deferred.promise;		}	};	//almacenar la banda favorita de un usuario	this.saveFavsBanda = function(Banda) {		if (typeof(Storage) !== 'undefined') {			//se obtienen las bandas favoritas que se han almacenado			var bandasFavs = [];			if (JSON.parse(localStorage.getItem('BandasFavs1'))) {				bandasFavs = JSON.parse(localStorage.getItem('BandasFavs1'));				var encontrado = false;				//antes de almacenar la banda se comprueba si ya existe en favoritos				for (var idx in bandasFavs) {					if (bandasFavs[idx].id === Banda.id) {						encontrado = true;					}				}				if (!encontrado) {					bandasFavs.push(Banda);				}			} else {				bandasFavs.push(Banda);			}			//se vuelve a serializar el objeto y a almacenarlo en el localStorage			localStorage.setItem('BandasFavs1', JSON.stringify(bandasFavs));		}	};}]);